;====================================================================
; Main.asm file generated by New Project wizard
;
; Created   Cum Mar 11 2016
; Processor 8086
; Compiler  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================
CODE    SEGMENT PARA 'CODE'
        ASSUME CSCODE, DSDATA, SSSTAK
STAK    SEGMENT PARA STACK 'STACK'
        DW 20 DUP()
STAK    ENDS

DATA    SEGMENT PARA 'DATA'
SERIALDATA  	DB 15 DUP ()
;KEY		DB 'a','a','a'
KEY 		DB 'l','a','b'
		DB  0 , 0, 0
		DB  1 , 1 , 1
		
		

CTRL1 EQU 105H 
DATA1 EQU 101H
CTRL2 EQU 104H
DATA2 EQU 100H

DATA    ENDS
START PROC FAR
        MOV AX, DATA
        MOV DS, AX
        
        ; initialize 8251_1
        MOV DX, CTRL1
        CALL Init8251
        
        ; initialize 8251_2
        MOV DX, CTRL2
        CALL Init8251
	
	
        MOV CX,3
	XOR DI,DI
LOOP1
	PUSH CX
        ;################################### SENDING 'S' CHARACTER ##############################################
        MOV DX, DATA1
	MOV AL , 'S'
        CALL  SendData ; DX is sent as function parameter
        
;############################################### WAITING FOR  ##############################################
	 ;Now the TOPSECRET will ask us to enter the key by sending 'key'
	;We start reading the key after we get '' 
        MOV DX, DATA1
WAIT_FOR_
        CALL ReceiveData ; DX is sent as function parameter
        CMP AL, ''
        JNE WAIT_FOR_
        
        ; send key 
        CALL SEND_KEY

;########################################### READING THE PASSWORD ##############################################	
      
      XOR SI, SI
      MOV DX, DATA1
READ_MSG
      CALL ReceiveData ; DX is sent as function parameter
      CMP AL, 'E'
      JE DISPLAY  ; WE CAN ONLY GET NUMBERS (FOLLOWED BY CHARACTERS ) OR EOT  .. so E MEANS END OF TRANSMIT
      SUB AL, '0' ; get the real value of the number from the ASCII code
      XOR AH, AH
      MOV CX, AX ; We will read characters AL times so put it in CX
MSG
      CALL ReceiveData
      MOV SERIALDATA[SI], AL ; save data char
      INC SI
      LOOP MSG
      JMP READ_MSG
   
;########################################### DISPLAY THE PASSWORD ##############################################   
DISPLAY 
       MOV DX, DATA2
       CALL PRINT
       
       ADD DI,3
       MOV AL, 13
       CALL SendData 
       MOV DX, DATA1
       MOV AL, 13
       CALL SendData 
       POP CX
       LOOP LOOP1
ENDLESS
       JMP ENDLESS
RETF
START ENDP


;############################### Function to initilize the 8051######################################;
Init8251 PROC NEAR
   MOV AL, 01001101B ; MOD  1 bit stop, , no parity, 8 bit  for data, factor 1 for baud rate
   OUT DX,AL
   
   MOV AL, 40H ; RESET
   OUT DX,AL
 
   MOV AL, 01001101B ; MOD Again
   OUT DX,AL

   MOV AL, 00010101B ; CONTROL enable TxE RxE and clear all errors
   OUT DX, AL

RET
Init8251 ENDP
;############################### Function to PRINT ######################################;

PRINT PROC NEAR
        ; input SI (size of serialdata array)
        MOV CX, SI
        XOR SI, SI
PRINT_NCHAR
        MOV AL, SERIALDATA[SI]
        INC SI
        CALL SendData
        LOOP PRINT_NCHAR
        RET
PRINT ENDP        
        
;############################### Function to send the key from 8251  ######################################;
SEND_KEY PROC NEAR
        MOV DX, DATA1
        MOV CX, 3
        MOV SI, DI ;DI= line number,  SI will be incremented to loop over columns 
	NCHAR_KEY
        MOV  AL,KEY[SI]
	CALL SendData
        INC SI
        LOOP NCHAR_KEY
        RET
SEND_KEY ENDP


;############################### Function to Read the data to the 8251 ######################################;
ReceiveData PROC NEAR
	 ;Hangi 85251den okuyacagiz DX ile ögrenebiliriz
	 MOV BX, DX ; COPY the data address
	 ADD BX ,4 ; CONTROL ADDRESS = DATA ADDRESS + 4  for both 8251
Tekrar	 CALL RxRdy
	 IN AL, DX ; read the data
	 SHR AL,1 ;Because of Proteus error
	 RET
ReceiveData ENDP


;############################### Function to send Data from 8251 ######################################;
SendData PROC NEAR
	 ;Hangi 8251den okuyacagiz DX ile ögrenebiliriz
	 MOV BX, DX ; COPY the data address
	 ADD BX ,4 ; CONTROL ADDRESS = DATA ADDRESS + 4  for both 8251
Tekrar	 CALL TxRdy
	 OUT DX,AL ; read the data
	 RET
RET
SendData ENDP


;############################### Function to check if 8251 is ready to Read Data######################################;
RxRdy PROC NEAR
	 ;Hangi 8251 okuyacagiz BX üzerinde 
	 PUSH DX
	 MOV DX,BX
Tekrar  IN AL, DX ; Read the Status Register
	 AND AL, 02H ; Check the RxRDY if the data is available
	 JZ Tekrar ; if it is not keep waiting
	 POP DX
RET
RxRdy ENDP


;############################### Function to check if 8251 is ready to Transmit Data ######################################;
TxRdy PROC NEAR
	 ;Hangi 8251 okuyacagiz BX üzerinde 
	 PUSH DX
	 PUSH AX
	 MOV DX,BX
Tekrar  IN AL, DX ; Read the Status Register
	 AND AL, 01H ; Check the RxRDY if the data is available
	 JZ Tekrar ; if it is not keep waiting
	 POP AX
	 POP DX
	 RET
TxRdy ENDP


CODE    ENDS
        END START